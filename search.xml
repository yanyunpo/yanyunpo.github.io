<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/posts/1.html"/>
      <url>/posts/1.html</url>
      
        <content type="html"><![CDATA[<h1 id="pygame"><a href="#pygame" class="headerlink" title="pygame:"></a>pygame:</h1><p>在1个py文件中，首先会调用主函数，如下所示，在本例中，main用于启动整个游戏</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>快捷键：CTRL+鼠标左键：跳转到函数定义处</p><h2 id="main：流程"><a href="#main：流程" class="headerlink" title="main：流程"></a>main：流程</h2><blockquote><h3 id="1-初始化pygame-【pg-init-】：检查sdl版本；初始化声音（mixer）模块；屏幕状态为false"><a href="#1-初始化pygame-【pg-init-】：检查sdl版本；初始化声音（mixer）模块；屏幕状态为false" class="headerlink" title="1.初始化pygame 【pg.init()】：检查sdl版本；初始化声音（mixer）模块；屏幕状态为false"></a>1.初始化pygame 【pg.init()】：检查sdl版本；初始化声音（mixer）模块；屏幕状态为false</h3><h3 id="2-设置屏幕显示模式-【pg-display-set-mode】"><a href="#2-设置屏幕显示模式-【pg-display-set-mode】" class="headerlink" title="2.设置屏幕显示模式 【pg.display.set_mode】"></a>2.设置屏幕显示模式 【pg.display.set_mode】</h3><p>几个参数举例：size=(0, 0), flags=0, depth=0, display=0</p><h3 id="3-加载图片-【load-image】："><a href="#3-加载图片-【load-image】：" class="headerlink" title="3.加载图片  【load_image】："></a>3.加载图片  【load_image】：</h3><p>（1）飞船、爆炸、外星人、子弹、发射</p><h3 id="4-转换成数组结构传递到指定参数中"><a href="#4-转换成数组结构传递到指定参数中" class="headerlink" title="4.转换成数组结构传递到指定参数中"></a>4.转换成数组结构传递到指定参数中</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Player.images = [img, pg.transform.flip(img, <span class="number">1</span>, <span class="number">0</span>)]</span><br><span class="line">Explosion.images = [img, pg.transform.flip(img, <span class="number">1</span>, <span class="number">1</span>)]</span><br><span class="line">Alien.images = [load_image(im) <span class="keyword">for</span> im <span class="keyword">in</span> (<span class="string">&quot;alien1.gif&quot;</span>, <span class="string">&quot;alien2.gif&quot;</span>, <span class="string">&quot;alien3.gif&quot;</span>)]</span><br><span class="line">Bomb.images = [load_image(<span class="string">&quot;bomb.gif&quot;</span>)]</span><br><span class="line">Shot.images = [load_image(<span class="string">&quot;shot.gif&quot;</span>)]</span><br></pre></td></tr></table></figure><h3 id="5-装饰窗口"><a href="#5-装饰窗口" class="headerlink" title="5.装饰窗口"></a>5.装饰窗口</h3><p>修改内容：分辨率、系统映像【即窗口左上角的小图标】、标题、鼠标可见or不可见模式</p><h3 id="6-添加背景"><a href="#6-添加背景" class="headerlink" title="6.添加背景"></a>6.添加背景</h3><h3 id="7-加载声音"><a href="#7-加载声音" class="headerlink" title="7.加载声音"></a>7.加载声音</h3><h3 id="8-初始化游戏组"><a href="#8-初始化游戏组" class="headerlink" title="8.初始化游戏组"></a>8.初始化游戏组</h3><p>(1)外星人、子弹、射程</p><h3 id="9-给每一个相关类赋值默认的组"><a href="#9-给每一个相关类赋值默认的组" class="headerlink" title="9.给每一个相关类赋值默认的组"></a>9.给每一个相关类赋值默认的组</h3><h3 id="10-创建一些开始值"><a href="#10-创建一些开始值" class="headerlink" title="10.创建一些开始值"></a>10.创建一些开始值</h3><h3 id="11-初始化我们的初始sprite对象"><a href="#11-初始化我们的初始sprite对象" class="headerlink" title="11.初始化我们的初始sprite对象"></a>11.初始化我们的初始sprite对象</h3><h3 id="12-主要运动："><a href="#12-主要运动：" class="headerlink" title="12.主要运动："></a>12.主要运动：</h3><ol><li><p>在player处于激活状态时，判断键值并对键做出相应反映。</p></li><li><p>获取所有键值状态；</p></li><li><p>清除最近的drawn sprites</p></li><li><p>更新所有的sprites</p></li><li><p>处理所有的player输入【键值】：方向，开火</p></li><li><p>创建新的外星人：如果帧数为非空，则递减，否则重新新建一组外星人</p></li><li><p>丢炸弹</p></li><li><p>检测外星人和飞船是否相撞：遍历相撞的sprite列表，外星人、飞船爆炸，分数加1，移除玩家精灵</p></li><li><p>检测子弹是否击中了外星人：击中分数加1</p></li><li><p>检测炸弹是否击中了飞船：击中移除飞船</p></li><li><p>画出场景</p></li><li><p>帧速率上限为40fps，也被称为40HZ or 每秒40次</p><p>clock.tick(40)</p></li></ol></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>先运行查看结果，寻找主函数，逐句查看相关方法、实例的用法，明白各个实例之间是如何作用的。</p><h2 id="变量释义："><a href="#变量释义：" class="headerlink" title="变量释义："></a>变量释义：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lastalien <span class="comment">#组中的最后一个 sprite对象</span></span><br><span class="line">ALIEN_RELOAD <span class="comment">#新外星人之间的帧数，即每隔12个外星人后即再生一组外星人</span></span><br><span class="line">BOMB_ODDS   <span class="comment">#一个新炸弹丢下的机会</span></span><br><span class="line">alienreload  <span class="comment">#外星人再生，此值每次递减</span></span><br><span class="line">player：<span class="comment">#玩家 即车</span></span><br><span class="line">Surface：<span class="comment">#表示图像的pygame对象</span></span><br></pre></td></tr></table></figure><h2 id="相关方法简单解释"><a href="#相关方法简单解释" class="headerlink" title="相关方法简单解释"></a>相关方法简单解释</h2><h3 id="1-mixer：mixer模块"><a href="#1-mixer：mixer模块" class="headerlink" title="1.mixer：mixer模块"></a>1.mixer：mixer模块</h3><p>主要用于加载和播放声音，在调用相关方法前首先检查sdl版本，根据返回的值做出不同的初始化。</p><p>在pygame初始化后，再次检查一下mixer是否能正常使用。（即错误预判）。</p><h4 id="get-init"><a href="#get-init" class="headerlink" title="get_init"></a>get_init</h4><h4 id="pre-init"><a href="#pre-init" class="headerlink" title="pre_init"></a>pre_init</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_init</span>():</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    get_init() -&gt; (frequency, format, channels)</span></span><br><span class="line"><span class="string">    test if the mixer is initialized</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pre_init</span>(<span class="params">frequency=<span class="number">22050</span>, size=<span class="number">-16</span>, channels=<span class="number">2</span>, buffersize=<span class="number">4096</span>, devicename=None</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    pre_init(frequency=22050, size=-16, channels=2, buffersize=4096, devicename=None) -&gt; None</span></span><br><span class="line"><span class="string">    preset the mixer init arguments</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="2-display模块：显示模块"><a href="#2-display模块：显示模块" class="headerlink" title="2.display模块：显示模块"></a>2.display模块：显示模块</h3><h4 id="mode-ok"><a href="#mode-ok" class="headerlink" title="mode_ok"></a>mode_ok</h4><p>返回最合适的颜色深度</p><h4 id="set-mode"><a href="#set-mode" class="headerlink" title="set_mode"></a>set_mode</h4><p>初始化1个窗口或屏幕显示</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mode_ok</span>(<span class="params">size, flags=<span class="number">0</span>, depth=<span class="number">0</span>, display=<span class="number">0</span></span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    mode_ok(size, flags=0, depth=0, display=0) -&gt; depth</span></span><br><span class="line"><span class="string">    Pick the best color depth for a display mode</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_mode</span>(<span class="params">size=<span class="number">00</span>, flags=<span class="number">0</span>, depth=<span class="number">0</span>, display=<span class="number">0</span></span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    set_mode(size=(0, 0), flags=0, depth=0, display=0) -&gt; Surface</span></span><br><span class="line"><span class="string">    Initialize a window or screen for display</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="set-icon"><a href="#set-icon" class="headerlink" title="set_icon"></a>set_icon</h4><p>更改显示窗口的系统映像</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_icon</span>(<span class="params">Surface</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    set_icon(Surface) -&gt; None</span></span><br><span class="line"><span class="string">    Change the system image for the display window</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="set-caption"><a href="#set-caption" class="headerlink" title="set_caption"></a>set_caption</h4><p>设置当前窗口的标题</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_caption</span>(<span class="params">title, icontitle=None</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    set_caption(title, icontitle=None) -&gt; None</span></span><br><span class="line"><span class="string">    Set the current window caption</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="blit"><a href="#blit" class="headerlink" title="blit"></a>blit</h4><p>在另一幅画上1个图像</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">blit</span>(<span class="params">self, source, dest, area=None, special_flags=<span class="number">0</span></span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    blit(source, dest, area=None, special_flags=0) -&gt; Rect</span></span><br><span class="line"><span class="string">    draw one image onto another</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="3-load-image"><a href="#3-load-image" class="headerlink" title="3.load_image"></a>3.load_image</h3><p>此方法是重新封装了一下图像加载流程所用到方法。</p><p>参数：1. file 所需文件，需要用到的参数【main_dir】文件的加载路径，需要用到的模块为os，</p><p>os.path.join ：是将传入的参数整合成加载路径格式，默认图像都是在data目录下。</p><p>pg.image.load(file)：加载指定路径下的图像。</p><p>surface.convert() ：返回转换后的正确值。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_image</span>(<span class="params">file</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; loads an image, prepares it for play</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    file = os.path.join(main_dir, <span class="string">&quot;data&quot;</span>, file)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        surface = pg.image.load(file)</span><br><span class="line">    <span class="keyword">except</span> pg.error:</span><br><span class="line">        <span class="keyword">raise</span> SystemExit(<span class="string">&#x27;Could not load image &quot;%s&quot; %s&#x27;</span> % (file, pg.get_error()))</span><br><span class="line">    <span class="keyword">return</span> surface.convert()</span><br></pre></td></tr></table></figure><h3 id="4-transform："><a href="#4-transform：" class="headerlink" title="4.transform："></a>4.transform：</h3><h4 id="flip"><a href="#flip" class="headerlink" title="flip"></a>flip</h4><p>垂直和水平翻转</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flip</span>(<span class="params">Surface, xbool, ybool</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    flip(Surface, xbool, ybool) -&gt; Surface</span></span><br><span class="line"><span class="string">    flip vertically and horizontally</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="scale"><a href="#scale" class="headerlink" title="scale"></a>scale</h4><p>调整到新的分辨率</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scale</span>(<span class="params">Surface, (<span class="params">width, height</span>), DestSurface=None</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    scale(Surface, (width, height), DestSurface = None) -&gt; Surface</span></span><br><span class="line"><span class="string">    resize to new resolution</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="5-mouse：鼠标模块"><a href="#5-mouse：鼠标模块" class="headerlink" title="5.mouse：鼠标模块"></a>5.mouse：鼠标模块</h3><h4 id="set-visible"><a href="#set-visible" class="headerlink" title="set_visible"></a>set_visible</h4><p>设置鼠标显示模式：可见or不可见</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_visible</span>(<span class="params">bool</span>):</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    set_visible(bool) -&gt; bool</span></span><br><span class="line"><span class="string">    hide or show the mouse cursor</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="6-rect-：矩形对象模块"><a href="#6-rect-：矩形对象模块" class="headerlink" title="6.rect ：矩形对象模块"></a>6.rect ：矩形对象模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">SCREENRECT = pg.Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">Rect = RectType</span><br></pre></td></tr></table></figure><h4 id="RectType"><a href="#RectType" class="headerlink" title="RectType"></a>RectType</h4><p>存储直角坐标</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RectType</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Rect(left, top, width, height) -&gt; Rect</span></span><br><span class="line"><span class="string">    Rect((left, top), (width, height)) -&gt; Rect</span></span><br><span class="line"><span class="string">    Rect(object) -&gt; Rect</span></span><br><span class="line"><span class="string">    pygame object for storing rectangular coordinates</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#background = pg.Surface(SCREENRECT.size) </span></span><br><span class="line"><span class="comment">#size中的参数使用了匿名函数</span></span><br><span class="line">size = property(<span class="keyword">lambda</span> self: object(), <span class="keyword">lambda</span> self, v: <span class="literal">None</span>, <span class="keyword">lambda</span> self: <span class="literal">None</span>)  <span class="comment"># default</span></span><br></pre></td></tr></table></figure><h3 id="7-sprite：精灵模块-，轻量化的动画"><a href="#7-sprite：精灵模块-，轻量化的动画" class="headerlink" title="7.sprite：精灵模块 ，轻量化的动画"></a>7.sprite：精灵模块 ，轻量化的动画</h3><h4 id="Group"><a href="#Group" class="headerlink" title="Group"></a>Group</h4><p>多个精灵的容器类</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Group</span>(<span class="params">AbstractGroup</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;container class for many Sprites</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    pygame.sprite.Group(*sprites): return Group</span></span><br><span class="line"><span class="string">     A simple container for Sprite objects. This class can be subclassed to</span></span><br><span class="line"><span class="string">    create containers with more specific behaviors. The constructor takes any</span></span><br><span class="line"><span class="string">    number of Sprite arguments to add to the Group. The group supports the</span></span><br><span class="line"><span class="string">    following standard Python operations:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        in      test if a Sprite is contained</span></span><br><span class="line"><span class="string">        len     the number of Sprites contained</span></span><br><span class="line"><span class="string">        bool    test if any Sprites are contained</span></span><br><span class="line"><span class="string">        iter    iterate through all the Sprites</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The Sprites in the Group are not ordered, so the Sprites are drawn and</span></span><br><span class="line"><span class="string">    iterated over in no particular order.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *sprites</span>):</span></span><br><span class="line">        AbstractGroup.__init__(self)</span><br><span class="line">        self.add(*sprites)</span><br><span class="line"></span><br><span class="line">RenderPlain = Group</span><br><span class="line">RenderClear = Group</span><br></pre></td></tr></table></figure><h4 id="RenderUpdates"><a href="#RenderUpdates" class="headerlink" title="RenderUpdates"></a>RenderUpdates</h4><p>有1个增强的draw方法，用于跟踪屏幕的更改区域</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RenderUpdates</span>(<span class="params">Group</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Group class that tracks dirty updates</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    pygame.sprite.RenderUpdates(*sprites): return RenderUpdates</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    This class is derived from pygame.sprite.Group(). It has an enhanced draw</span></span><br><span class="line"><span class="string">    method that tracks the changed areas of the screen.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h4 id="GroupSingle"><a href="#GroupSingle" class="headerlink" title="GroupSingle"></a>GroupSingle</h4><p>仅保存组中的最后一个 sprite对象，给这个属性赋值，会正确的移除旧对象，添加新的对象</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GroupSingle</span>(<span class="params">AbstractGroup</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A group container that holds a single most recent item.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    This class works just like a regular group, but it only keeps a single</span></span><br><span class="line"><span class="string">    sprite in the group. Whatever sprite has been added to the group last will</span></span><br><span class="line"><span class="string">    be the only sprite in the group.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    You can access its one sprite as the .sprite attribute.  Assigning to this</span></span><br><span class="line"><span class="string">    attribute will properly remove the old sprite and then add the new one.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, sprite=None</span>):</span></span><br><span class="line">        AbstractGroup.__init__(self)</span><br><span class="line">        self.__sprite = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> sprite <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            self.add(sprite)</span><br></pre></td></tr></table></figure><h4 id="spritecollide"><a href="#spritecollide" class="headerlink" title="spritecollide"></a>spritecollide</h4><p>返回在一组中找到与另一个精灵相交的精灵列表</p><h4 id="dokill"><a href="#dokill" class="headerlink" title="dokill"></a>dokill</h4><p>如果为True则所有相撞的精灵就会从组中被移除。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spritecollide</span>(<span class="params">sprite, group, dokill, collided=None</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;find Sprites in a Group that intersect another Sprite</span></span><br><span class="line"><span class="string">     pygame.sprite.spritecollide(sprite, group, dokill, collided=None):</span></span><br><span class="line"><span class="string">        return Sprite_list</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Return a list containing all Sprites in a Group that intersect with another</span></span><br><span class="line"><span class="string">    Sprite. Intersection is determined by comparing the Sprite.rect attribute</span></span><br><span class="line"><span class="string">    of each Sprite.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The dokill argument is a bool. If set to True, all Sprites that collide</span></span><br><span class="line"><span class="string">    will be removed from the Group.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The collided argument is a callback function used to calculate if two</span></span><br><span class="line"><span class="string">    sprites are colliding. it should take two sprites as values, and return a</span></span><br><span class="line"><span class="string">    bool value indicating if they are colliding. If collided is not passed, all</span></span><br><span class="line"><span class="string">    sprites must have a &quot;rect&quot; value, which is a rectangle of the sprite area,</span></span><br><span class="line"><span class="string">    which will be used to calculate the collision.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="8-key：键模块"><a href="#8-key：键模块" class="headerlink" title="8.key：键模块"></a>8.key：键模块</h3><h4 id="get-pressed"><a href="#get-pressed" class="headerlink" title="get_pressed"></a>get_pressed</h4><p>获取所有键盘按钮的状态</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pressed</span>():</span> <span class="comment"># real signature unknown; restored from __doc__</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    get_pressed() -&gt; bools</span></span><br><span class="line"><span class="string">    get the state of all keyboard buttons</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h3 id="9-Explosion：爆炸类"><a href="#9-Explosion：爆炸类" class="headerlink" title="9.Explosion：爆炸类"></a>9.Explosion：爆炸类</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Explosion</span>(<span class="params">pg.sprite.Sprite</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; An explosion. Hopefully the Alien and not the player!</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="10-Player：1个月亮类型的车代表玩家"><a href="#10-Player：1个月亮类型的车代表玩家" class="headerlink" title="10.Player：1个月亮类型的车代表玩家"></a>10.Player：1个月亮类型的车代表玩家</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>(<span class="params">pg.sprite.Sprite</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; Representing the player as a moon buggy type car.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用手册</title>
      <link href="/posts/50194.html"/>
      <url>/posts/50194.html</url>
      
        <content type="html"><![CDATA[<p>hexo简介<br>hexo是一个静态的博客网站<br>安装的前提条件<br>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>Git<br>对于windows用户来说<br>安装Node.js和Git很简单，只需要前往官网下载.msi格式即可，选择64位还是32位按照需要（一般都是64位）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo常见问题集合</title>
      <link href="/posts/62124.html"/>
      <url>/posts/62124.html</url>
      
        <content type="html"><![CDATA[<p>##参考<br>[hexo故障说明文档]: <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a><br>[hexo中文官方文档]: <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a><br>##空格导致的YAML解析错误<br><code>FATAL &#123;   err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 10, column 6: reason: &#39;can not read a block mapping entry; a multiline key may not be an implicit key&#39;</code><br>eg:<br>/scaffolds/post.md文件中有以下2个元素，但是tags:后没有加上空格就出现了以上错误。<br><code>tags: updated:</code><br><strong>解决</strong>：在配置文件中(.yml和/scaffolds/post.md、page.md)等出现了缺少空格等问题。检查相关文件是否出现了空格。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试样例文章</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<p>本文内容仅为测试所用，相关知识点请不要进行参考。<br>主要记录butterfly.yml和_config.yml的修改内容<br>butterfly.yml是butterfly主题的配置文件，原名为_config.yml，为了后面的主题升级导致的覆写原已写好的配置文件，<br>所以另外拷贝到source/_data目录下并重名为butterfly.yml。当升级时就不会覆盖原配置文件，有更新的地方，在butterfly.yml中修改即可。</p><h6 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h6><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">吐槽池:</span> <span class="string">/messageboard/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-paper-plane</span></span><br><span class="line">  <span class="string">找文章</span> <span class="string">||</span> <span class="attr">fa-fw fa fa-book:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">标签</span> <span class="string">||</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">分类</span> <span class="string">||</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">时间轴</span> <span class="string">||</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">链接</span> <span class="string">||</span> <span class="attr">fa fa-link:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">友情链接</span> <span class="string">||</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-users</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Lete乐特导航网</span> <span class="string">||</span> <span class="string">https://nav.lete114.top</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-star</span></span><br><span class="line">  <span class="string">菜单</span> <span class="string">||</span> <span class="attr">fa fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">关于</span> <span class="string">||</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Yilia主题</span> <span class="string">||</span> <span class="string">https://yilia.lete114.top/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Lete乐特个人主页</span> <span class="string">||</span> <span class="string">https://home.lete114.top/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure><p><strong>暂时先不添加的功能</strong><br>文章置顶：<br>要為文章置頂，你需要安裝插件 (hexo-generator-index-pin-top 或者 hexo-generator-indexed)<br>如果使用 hexo-generator-index-pin-top, 需要先卸載掉 hexo-generator-index，<br>然後在文章的 front-matter 區域裏添加 top: true 屬性來把這篇文章置頂<br>如果使用 hexo-generator-indexed, 需要先卸載掉 hexo-generator-index，<br>然後在文章的 front-matter 區域裏添加 sticky: 1 屬性來把這篇文章置頂。數值越大，置頂的優先級越大</p><p>hexo-generator-indexed</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index</span><br><span class="line">npm install hexo-generator-indexed</span><br></pre></td></tr></table></figure><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">top: true</span><br></pre></td></tr></table></figure><p>hexo-generator-index-pin-top</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index</span><br><span class="line">npm install hexo-generator-index-pin-top</span><br></pre></td></tr></table></figure><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">sticky: 1</span><br></pre></td></tr></table></figure><div class="note default">            <p>default 提示块标签</p>          </div><div class="note primary no-icon">            <p>primary 提示块标签</p>          </div><div class="note success">            <p>success 提示块标签</p>          </div><div class="note info">            <p>info 提示块标签</p>          </div><div class="note warning">            <p>warning 提示块标签</p>          </div><div class="note danger">            <p>danger 提示块标签</p>          </div><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg'>  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "/img/loading.gif" data-lazy-src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg'>  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><div class="justified-gallery"><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><div class="mermaid">          pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5          </div>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> _config.yml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
