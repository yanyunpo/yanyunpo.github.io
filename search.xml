<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django-搭建初级应用1</title>
      <link href="posts/18484.html"/>
      <url>posts/18484.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Django-搭建初级应用1 005</title>
      <link href="posts/65105.html"/>
      <url>posts/65105.html</url>
      
        <content type="html"><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a><a href="https://www.liujiangblog.com/blog/36/">参考</a></h3><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1.环境搭建"></a>1.环境搭建</h1><h2 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h2><p>python3.8+Django3.1.1 【安装教程】</p><h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><p>Pycharm收费版2020.1.1【请支持正版】</p><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><p>win10</p><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><p>（1）安装Django时需要将其加入到环境变量<br>（2）虚拟环境需要激活才能使用【active.bat】</p><h1 id="2-入门1"><a href="#2-入门1" class="headerlink" title="2.入门1"></a>2.入门1</h1><h2 id="（1）创建Django项目"><a href="#（1）创建Django项目" class="headerlink" title="（1）创建Django项目"></a>（1）创建Django项目</h2><p>打开Pycharm，选择Django，虚拟环境和工程项目路径</p><h2 id="（2）项目初始化文件概览"><a href="#（2）项目初始化文件概览" class="headerlink" title="（2）项目初始化文件概览"></a>（2）项目初始化文件概览</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">__init__.py:空文件</span><br><span class="line">setttings.py:空配置文件</span><br><span class="line">urls.py:路由文件</span><br><span class="line">wsgi.py:网关文件</span><br><span class="line">templates:HTML文件安置目录</span><br><span class="line">manage.py：项目管理脚本</span><br></pre></td></tr></table></figure><h2 id="（3）创建APP"><a href="#（3）创建APP" class="headerlink" title="（3）创建APP"></a>（3）创建APP</h2><p>terminal终端</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">python manage.py startapp login</span><br></pre></td></tr></table></figure><p>工程目录下生成一个文件夹login</p><h2 id="（4）编写路由【urls-py】"><a href="#（4）编写路由【urls-py】" class="headerlink" title="（4）编写路由【urls.py】"></a>（4）编写路由【urls.py】</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#1.导入文件</span><br><span class="line">from login import views</span><br><span class="line">#2.在列表中添加路由</span><br><span class="line">urlpatterns &#x3D; [</span><br><span class="line">path(&#39;admin&#x2F;&#39;,admin.site.urls),</span><br><span class="line">path(&#39;index&#x2F;&#39;,views.index)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="（5）编写视图文件【views-py】"><a href="#（5）编写视图文件【views-py】" class="headerlink" title="（5）编写视图文件【views.py】"></a>（5）编写视图文件【views.py】</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#1.导入模块</span><br><span class="line">from django.shortcuts import HttpResponse</span><br><span class="line">#2.编写index函数</span><br><span class="line">def index(request):</span><br><span class="line">    return HttpResponse(&#39;Hello World!&#39;) #被此类封装后返回才能被HTTP协议识别，不能直接返回字符串</span><br></pre></td></tr></table></figure><h2 id="（6）运行项目"><a href="#（6）运行项目" class="headerlink" title="（6）运行项目"></a>（6）运行项目</h2><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">python manage.py runserver 127.0.0.1:8000</span><br></pre></td></tr></table></figure><p>pycharm中点击Edit Configurations  在host中填入127.0.0.1，port中填入8000，name随意。</p><p>注：在运行前要先将虚拟环境激活</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">cd F:\learn\2020\down\7月-8月\python\Project\DjangoVenv3.8\Project1\Scripts</span><br><span class="line">activate.bat</span><br><span class="line">cd cd F:\learn\2020\down\7月-8月\python\Project\untitled</span><br></pre></td></tr></table></figure><h2 id="（7）查看结果"><a href="#（7）查看结果" class="headerlink" title="（7）查看结果"></a>（7）查看结果</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1:8000</span><br><span class="line">127.0.0.1:8000&#x2F;index</span><br></pre></td></tr></table></figure><h2 id="（8）优化1-将HTML文件返回给用户"><a href="#（8）优化1-将HTML文件返回给用户" class="headerlink" title="（8）优化1 将HTML文件返回给用户"></a>（8）优化1 将HTML文件返回给用户</h2><p>在templats中新建index.html</p><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;background-color: antiquewhite;color: black&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from django.shortcuts import render</span><br><span class="line">def index(request):</span><br><span class="line">    return render(request,&#39;index.html&#39;);</span><br></pre></td></tr></table></figure><h3 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TEMPLATES &#x3D; [</span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        &#39;DIRS&#39;:[os.path.join(BASE_DIR,&#39;templates&#39;)],</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="（9）优化2-使用静态文件"><a href="#（9）优化2-使用静态文件" class="headerlink" title="（9）优化2 使用静态文件"></a>（9）优化2 使用静态文件</h2><h3 id="1-新建static-js包"><a href="#1-新建static-js包" class="headerlink" title="1.新建static.js包"></a>1.新建static.js包</h3><h3 id="2-在js中拷贝jquery-3-2-1-min-js"><a href="#2-在js中拷贝jquery-3-2-1-min-js" class="headerlink" title="2.在js中拷贝jquery-3.2.1.min.js"></a>2.在js中拷贝jquery-3.2.1.min.js</h3><h3 id="3-配置settings"><a href="#3-配置settings" class="headerlink" title="3.配置settings"></a>3.配置settings</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#3.1 帮助信息</span><br><span class="line"> # Statics files(CSS,JavaScrpt,Images)</span><br><span class="line"> # https:&#x2F;&#x2F;docs.djangoproject.com&#x2F;en&#x2F;2.1&#x2F;howto&#x2F;static-files&#x2F;</span><br><span class="line">#3.2 浏览器访问静态文件的前缀部分</span><br><span class="line">STATIC_URL &#x3D; &#39;&#x2F;static&#x2F;&#39;</span><br><span class="line">#3.3 目录路径</span><br><span class="line">STATICFILES_DIRS &#x3D; [</span><br><span class="line">    os.path.join(BASE_DIR,&#39;static&#39;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="4-在index-html中引入js"><a href="#4-在index-html中引入js" class="headerlink" title="4.在index.html中引入js"></a>4.在index.html中引入js</h3><figure class="highlight javascript"><figcaption><span>1.8</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script src = <span class="string">&quot;/static/js/jquert-3.2.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="（10）接收用户发送的数据"><a href="#（10）接收用户发送的数据" class="headerlink" title="（10）接收用户发送的数据"></a>（10）接收用户发送的数据</h2><h3 id="index-html-1"><a href="#index-html-1" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户输入：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/index/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="（11）返回动态页面"><a href="#（11）返回动态页面" class="headerlink" title="（11）返回动态页面"></a>（11）返回动态页面</h2><h3 id="views-py"><a href="#views-py" class="headerlink" title="views.py"></a>views.py</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from django.shortcuts import render</span><br><span class="line">from django.shortcuts import HttpResponse</span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line"></span><br><span class="line">user_list &#x3D; []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def index(request):</span><br><span class="line">    if request.method &#x3D;&#x3D; &#39;POST&#39;:</span><br><span class="line">        username &#x3D; request.POST.get(&#39;username&#39;)</span><br><span class="line">        password &#x3D; request.POST.get(&#39;password&#39;)</span><br><span class="line">        print(username, password)</span><br><span class="line">        temp &#x3D; &#123;&#39;user&#39;: username, &#39;pwd&#39;: password&#125;</span><br><span class="line">        user_list.append(temp)</span><br><span class="line">    return render(request, &#39;index.html&#39;, &#123;&#39;data&#39;: user_list&#125;)</span><br></pre></td></tr></table></figure><h3 id="index-HTML"><a href="#index-HTML" class="headerlink" title="index.HTML"></a>index.HTML</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户输入：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/index/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;   <span class="comment">&lt;!--加入这行 --&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户展示：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                &#123;% for item in data %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.user &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.pwd &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="（12）使用数据库"><a href="#（12）使用数据库" class="headerlink" title="（12）使用数据库"></a>（12）使用数据库</h2><p>sqlite3</p><h3 id="1-注册app"><a href="#1-注册app" class="headerlink" title="1.注册app"></a>1.注册app</h3><p>settings</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS&#x3D;[</span><br><span class="line">...</span><br><span class="line">&#39;login&#39;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">DATABASES &#x3D; [</span><br><span class="line">...</span><br><span class="line">#保持不变</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="2-models-py"><a href="#2-models-py" class="headerlink" title="2.models.py"></a>2.models.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    user = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    pwd = models.CharField(max_length=<span class="number">32</span>)</span><br></pre></td></tr></table></figure><h3 id="3-terminal"><a href="#3-terminal" class="headerlink" title="3.terminal"></a>3.terminal</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line"></span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><h3 id="4-views-py"><a href="#4-views-py" class="headerlink" title="4.views.py"></a>4.views.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> login <span class="keyword">import</span> models  <span class="comment"># 导入models文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将数据保存到数据库</span></span><br><span class="line">        models.UserInfo.objects.create(user=username, pwd=password)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从数据库中读取所有数据，注意缩进</span></span><br><span class="line">    user_list = models.UserInfo.objects.all()</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, &#123;<span class="string">&#x27;data&#x27;</span>: user_list&#125;)</span><br></pre></td></tr></table></figure><h2 id="（13）总结"><a href="#（13）总结" class="headerlink" title="（13）总结"></a>（13）总结</h2><h3 id="1-views-py"><a href="#1-views-py" class="headerlink" title="1.views.py"></a>1.views.py</h3><h3 id="2-settings-py"><a href="#2-settings-py" class="headerlink" title="2.settings.py"></a>2.settings.py</h3><h3 id="3-models-py"><a href="#3-models-py" class="headerlink" title="3.models.py"></a>3.models.py</h3><h3 id="4-html"><a href="#4-html" class="headerlink" title="4.html"></a>4.html</h3>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hugo-搭建博客总结1-004</title>
      <link href="posts/16615.html"/>
      <url>posts/16615.html</url>
      
        <content type="html"><![CDATA[<p>今日感悟：世上本没有bug，脑残的人多了就有了bug。</p><p>#脑残的一些bug</p><p>##hugo main引入scss/sass文件报错<br>baseURL = “<a href="http://localhost:1313&quot;写成了fv.github.io的url，修改为本地地址即可。">http://localhost:1313&quot;写成了fv.github.io的url，修改为本地地址即可。</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 搭建博客常用命令 003</title>
      <link href="posts/5211.html"/>
      <url>posts/5211.html</url>
      
        <content type="html"><![CDATA[<p>#常用命令<br>经常更新</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourgithubname&quot;</span><br><span class="line">git config --global user.email &quot;yourgithubemail&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">#生成后填到github和coding上（有coding平台的话）</span><br><span class="line">#验证是否成功</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@git.coding.net #(有coding平台的话)</span><br><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br><span class="line">sudo npm install hexo-cli -g</span><br><span class="line">git clone git@………………</span><br><span class="line">cd xxx.github.io</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">hexo d -g #g 和d连用</span><br><span class="line">hexo new newpage</span><br><span class="line">git add .</span><br><span class="line">git commit –m &quot;add branch&quot;</span><br><span class="line">git push</span><br><span class="line">#已经有编辑的只需pull即可</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 搭建博客总结2 002</title>
      <link href="posts/5287.html"/>
      <url>posts/5287.html</url>
      
        <content type="html"><![CDATA[<p>hexo生成静态页面真的太慢了，即使用了gulp，在网页端打开文章，一直都在加载中，好气，打算换了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> butterfly </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 搭建博客总结1 001</title>
      <link href="posts/5539.html"/>
      <url>posts/5539.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo框架介绍"><a href="#hexo框架介绍" class="headerlink" title="hexo框架介绍"></a>hexo框架介绍</h1><p>基于Node.js的静态博客框架，依赖少易于安装。可以托管在GitHub和coding上，对中文支持友好。</p><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><ul><li>hexo的初步搭建及部署</li><li>主题配置，双部署实现国内外分流</li><li>添加更多功能</li></ul><h1 id="hexo的初步搭建及部署"><a href="#hexo的初步搭建及部署" class="headerlink" title="hexo的初步搭建及部署"></a>hexo的初步搭建及部署</h1><h2 id="框架的本地安装与运行"><a href="#框架的本地安装与运行" class="headerlink" title="框架的本地安装与运行"></a>框架的本地安装与运行</h2><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>Git是分布式版本控制系统，用于项目版本管理。</p><h4 id="学习文档"><a href="#学习文档" class="headerlink" title="学习文档"></a>学习文档</h4><p><a href="https://git-scm.com/book/zh/">官方教程</a><br><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git教程</a><br>官网速度一般比较狗屎，建议第二个，除了广告多点，没有其他缺点。</p><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><ul><li><a href="https://gitforwindows.org/">windows</a></li><li>Linux<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><h4 id="下载安装-1"><a href="#下载安装-1" class="headerlink" title="下载安装"></a>下载安装</h4><p><a href="https://nodejs.org/en/">Node.js</a><br>windows:选择Windows Installer  默认安装即可<br>Linux</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h4 id="检查node安装成功与否"><a href="#检查node安装成功与否" class="headerlink" title="检查node安装成功与否"></a>检查node安装成功与否</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p><strong>安装流程</strong></p><ul><li>新建blog文件夹</li><li>cd blog</li><li>安装<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli       #安装脚手架</span><br><span class="line">hexo -v                #检查版本</span><br><span class="line">hexo init myblog   #初始化hexo</span><br><span class="line">cd myblog             #进入myblog</span><br><span class="line">npm install            #新建</span><br><span class="line">hexo g         #   </span><br><span class="line">hexo server  #  本地运行</span><br></pre></td></tr></table></figure></li></ul><h3 id="Github创建个人仓库"><a href="#Github创建个人仓库" class="headerlink" title="Github创建个人仓库"></a>Github创建个人仓库</h3><p><strong>创建流程</strong></p><ul><li>注册账户</li><li>新建一个仓库，命名为用户名+github.io，eg: yanyunpo.github.io</li></ul><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ul><li>打开git bash</li><li>输入命令</li></ul><h4 id="命令详解"><a href="#命令详解" class="headerlink" title="命令详解"></a>命令详解</h4><ul><li>输入你的GitHub用户名和邮箱</li><li>检查是否正确</li><li>创建SSH，一路回车</li><li>复制复制id_rsa.pub的信息到ssh keys</li><li>查看是否成功</li></ul><p>GitHub的setting中，ssh keys的设置选项，点击New SSH key，复制id_rsa.pub的信息到里面。</p><p>SSH简要：密钥，id_rsa：本机的私人密钥.<br>id_rsa.pub：公共密钥，将公钥放到GitHub上，当连接GitHub账户时，根据公钥去匹配本机私钥，匹配上则说明正确，然后即可通过git上传文件到GitHub。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="部署到GitHub和coding"><a href="#部署到GitHub和coding" class="headerlink" title="部署到GitHub和coding"></a>部署到GitHub和coding</h3><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h4><p>打开站点配置文件_config.yml<br>释义：类型，仓库链接，分支</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p><strong>部署命令详解</strong></p><ul><li>安装deploy-git【部署】</li><li>清除</li><li>生成静态文章 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>缩写命令<br>hexo c &amp;&amp; g &amp;&amp; d</li></ul><h4 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h4><p>部署有些问题，以后更新。</p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>因为没钱，暂时不考虑。</p><h2 id="框架基本结构和打包文件概览"><a href="#框架基本结构和打包文件概览" class="headerlink" title="框架基本结构和打包文件概览"></a>框架基本结构和打包文件概览</h2><p>指定文件夹目录下有下列文件夹</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><h1 id="butterfly主题安装和配置"><a href="#butterfly主题安装和配置" class="headerlink" title="butterfly主题安装和配置"></a>butterfly主题安装和配置</h1><p>根据官方文档配置，在此不赘述。</p><ul><li><a href="https://hexo.io/zh-cn/docs/">hexo官方指导博客</a></li><li><a href="https://demo.jerryc.me/">butterfly官方指导博客</a><br>注：Hexo 在合并主题配置时，Hexo 配置文件中的 theme_config 的优先级最高，其次是 _config.[theme].yml 文件，最后是位于主题目录下的 _config.yml 文件。<h2 id="hexo基本配置"><a href="#hexo基本配置" class="headerlink" title="hexo基本配置"></a>hexo基本配置</h2>本小节主要是一些注意点，并非详细教程【详情请参考hexo和butterfly官方博客】。<h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3>分类下面的子类有顺序，标签没有。<br>eg：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Diary</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">PP</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">PS3</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Games</span></span><br></pre></td></tr></table></figure>categories中Diary、PP和PP、Diary是不同的,而在tags中PS3、Games和Games、PS3是相同的<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3>当你每一次使用代码 hexo new paper<br>它其实默认使用的是post这个布局，也就是在source文件夹下的_post里面。<br>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。<br>而new这个命令其实是：<code>hexo new [layout] &lt;title&gt;</code><br>只不过这个layout默认是post罢了。<h3 id="page"><a href="#page" class="headerlink" title="page"></a>page</h3>如果你想另起一页，那么可以使用<br>hexo new page board<br>系统会自动给你在source文件夹下创建一个board文件夹，以及此文件夹下的index.md，这样你访问的board对应的链接就是<a href="http://xxx.xxx/board">http://xxx.xxx/board</a><h3 id="draft【草稿】"><a href="#draft【草稿】" class="headerlink" title="draft【草稿】"></a>draft【草稿】</h3>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以<br>hexo new draft newpage。<br>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用<br>hexo server –draft，<br>在本地端口中开启服务预览。<br>如果你的草稿文件写完了，想要发表到post中，<br>hexo publish draft newpage ，<br>就会自动把newpage.md发送到post中。<h2 id="更换喜欢的主题"><a href="#更换喜欢的主题" class="headerlink" title="更换喜欢的主题"></a>更换喜欢的主题</h2>GitHub上下载喜欢的主题，放置到theme的文件夹下，_config.xml中的theme换成主题文件夹的名字。<br>根据主题的文档进行配置修改即可。<h2 id="多终端工作"><a href="#多终端工作" class="headerlink" title="多终端工作"></a>多终端工作</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3></li></ul><p>1.master没有源文件，只有.deploy_git中的内容，source和配置文件等都没有，因此只能在本地工作，换了电脑就无法操作了。<br>2.因此将源文件上传到GitHub的另一个分支，当需要工作时，从远端克隆到本地。</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>1.GitHub新建分支hexo<br>2.更改默认分支为hexo分支<br>3.多端工作</p><ul><li>随意进入一个文件，右键git bash，clone 文件<br>git clone <a href="mailto:&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#109;">&#103;&#x69;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#109;</a>:yanyunpo/yanyunpo.github.io.git</li><li>进入yanyunpo.github.io文件夹，删除除.git以外的文件，将源文件除了.deploy_git的文件都复制过去，.gitignore忽略一些不需要的文件，在主题中，如果有.git文件也都删除，然后上传即可。</li><li>远端电脑登陆git，克隆，拉取</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> butterfly </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 参考 000</title>
      <link href="posts/25858.html"/>
      <url>posts/25858.html</url>
      
        <content type="html"><![CDATA[<p>基于hexo+GitHub+butterfly搭建了自己的博客，之前仅仅只是更改了一些图片，没有写博客，本篇内容主要是参考，很多大佬已经写好的文章就不多赘述，在此做一个总结。</p><p>以后会常常更新</p><h1 id="大佬的博客"><a href="#大佬的博客" class="headerlink" title="大佬的博客"></a><strong>大佬的博客</strong></h1><p><a href="https://yunist.cn/">云玩家</a><br><a href="https://yangchaoyi.vip/">超逸博客</a><br><a href="https://sitoi.cn/">soitoi</a></p><h1 id="搭建博客相关"><a href="#搭建博客相关" class="headerlink" title="搭建博客相关"></a><strong>搭建博客相关</strong></h1><p><a href="https://yangchaoyi.vip/posts/520520/#%E6%90%AD%E5%BB%BA%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%88%E7%9C%9F%E5%A4%A7%E4%BD%AC%E5%86%99%E7%9A%84%EF%BC%8C%E8%B6%85%E8%AF%A6%E7%BB%86%EF%BC%89">hexo一些整合参考</a><br><a href="https://www.cnblogs.com/zhenglin-li/p/13522551.html">butterfly相关文章</a><br><a href="https://blog.csdn.net/Lott0419/article/details/106688492">Butterfly-蝴蝶-主题优化、美化-Lete乐特</a></p><h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a><strong>主题</strong></h1><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p><a href="https://hexo.io/zh-cn/docs/">hexo官方指导博客</a></p><h2 id="butterfly"><a href="#butterfly" class="headerlink" title="butterfly"></a>butterfly</h2><p><a href="https://demo.jerryc.me/">butterfly官方指导博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
